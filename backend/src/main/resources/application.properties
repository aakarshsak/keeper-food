# Server configuration
server.port=8080

# MySQL Database configuration
spring.datasource.url=${SPRING.DATASOURCE.URL}
spring.datasource.driverClassName=${SPRING.DATASOURCE.DRIVER}
spring.datasource.username=${SPRING.DATASOURCE.USERNAME}
spring.datasource.password=${SPRING.DATASOURCE.PASSWORD}

# JPA configuration
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Logging configuration
logging.level.com.foodkeeper=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Jackson configuration
spring.jackson.serialization.write-dates-as-timestamps=false

# JWT Configuration
app.jwtSecret=${JWT_SECRET}
app.jwtExpirationMs=${JWT_EXPIRATION}

# Email Configuration (Gmail SMTP)
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}

# Enable scheduling for OTP cleanup
spring.task.scheduling.enabled=true 